                        .module usart.c
                        .area text(rom, con, rel)
 0000                   .dbfile usart.c
                        .area data(ram, con, rel)
 0000                   .dbfile usart.c
 0000           _k::
 0000                   .blkb 1
                        .area idata
 0000 00                .byte 0
                        .area data(ram, con, rel)
 0001                   .dbfile usart.c
 0001                   .dbfile C:\Users\Administrator\Desktop\TrafficLight595\usart.c
 0001                   .dbsym e k _k c
 0001           _urgencyFlag::
 0001                   .blkb 1
                        .area idata
 0001 00                .byte 0
                        .area data(ram, con, rel)
 0002                   .dbfile C:\Users\Administrator\Desktop\TrafficLight595\usart.c
 0002                   .dbsym e urgencyFlag _urgencyFlag c
 0002           _daytimeFlag::
 0002                   .blkb 1
                        .area idata
 0002 01                .byte 1
                        .area data(ram, con, rel)
 0003                   .dbfile C:\Users\Administrator\Desktop\TrafficLight595\usart.c
 0003                   .dbsym e daytimeFlag _daytimeFlag c
 0003           _nightFlag::
 0003                   .blkb 1
                        .area idata
 0003 00                .byte 0
                        .area data(ram, con, rel)
 0004                   .dbfile C:\Users\Administrator\Desktop\TrafficLight595\usart.c
 0004                   .dbsym e nightFlag _nightFlag c
                        .area text(rom, con, rel)
 0000                   .dbfile C:\Users\Administrator\Desktop\TrafficLight595\usart.c
 0000                   .dbfunc e usart_init _usart_init fV
                        .even
 0000           _usart_init::
 0000                   .dbline -1
 0000                   .dbline 22
 0000           ; /******************************************
 0000           ;     利用中断接收串口接收数据，再对数据进行
 0000           ;       分类判断和执行命令，然后对字母输出
 0000           ; ******************************************/
 0000           ; 
 0000           ; 
 0000           ; #include<iom16v.h>
 0000           ; #include<macros.h>
 0000           ; #include<string.h>
 0000           ; #include"usart.h"
 0000           ; #include"twi.h"
 0000           ; #include"ds1307.h"
 0000           ; 
 0000           ; uchar k=0;
 0000           ; uchar getData[20];   //接收数组
 0000           ; 
 0000           ; uchar urgencyFlag=0,daytimeFlag=1,nightFlag=0;  //事件状态标志位
 0000           ; uchar yellowTime,greenTime,redTime;
 0000           ; 
 0000           ; 
 0000           ; void usart_init(void)     //配置usart寄存器
 0000           ; {
 0000                   .dbline 23
 0000           ;      DDRD&=~(1<<PD0);PORTD|=1<<PD0;
 0000 8898              cbi 0x11,0
 0002                   .dbline 23
 0002 909A              sbi 0x12,0
 0004                   .dbline 24
 0004           ;        DDRD|=1<<PD1;PORTD|=1<<PD1;
 0004 899A              sbi 0x11,1
 0006                   .dbline 24
 0006 919A              sbi 0x12,1
 0008                   .dbline 25
 0008           ;        UCSRC = (1<<URSEL) | (1<<UCSZ1) | (1<<UCSZ0);        //8位字符长度
 0008 86E8              ldi R24,134
 000A 80BD              out 0x20,R24
 000C                   .dbline 26
 000C           ;        UBRRL = 51;                                          //9600bps   8M
 000C 83E3              ldi R24,51
 000E 89B9              out 0x9,R24
 0010                   .dbline 27
 0010           ;        UCSRB = (1<<RXCIE) | (1<<RXEN) | (1<<TXEN);          //接收中断，发送中断，接收使能，发送使能                                     
 0010 88E9              ldi R24,152
 0012 8AB9              out 0xa,R24
 0014                   .dbline -2
 0014           L1:
 0014                   .dbline 0 ; func end
 0014 0895              ret
 0016                   .dbend
                        .area vector(rom, abs)
                        .org 44
 002C 0C940B00          jmp _usart_read
                        .area text(rom, con, rel)
 0016                   .dbfile C:\Users\Administrator\Desktop\TrafficLight595\usart.c
 0016                   .dbfunc e usart_read _usart_read fV
 0016           ;            buf -> <dead>
 0016           ;       time_buf -> R10
 0016           ;        dataBuf -> R10
 0016           ;        dataBuf -> R10
 0016           ;        dataBuf -> R10
                        .even
 0016           _usart_read::
 0016 0A92              st -y,R0
 0018 1A92              st -y,R1
 001A 2A92              st -y,R2
 001C 3A92              st -y,R3
 001E 4A92              st -y,R4
 0020 5A92              st -y,R5
 0022 6A92              st -y,R6
 0024 7A92              st -y,R7
 0026 8A92              st -y,R8
 0028 9A92              st -y,R9
 002A 0A93              st -y,R16
 002C 1A93              st -y,R17
 002E 2A93              st -y,R18
 0030 3A93              st -y,R19
 0032 8A93              st -y,R24
 0034 9A93              st -y,R25
 0036 AA93              st -y,R26
 0038 BA93              st -y,R27
 003A EA93              st -y,R30
 003C FA93              st -y,R31
 003E 0FB6              IN R0,63
 0040 0A92              st -y,R0
 0042 0E940000          xcall push_xgset300C
 0046 2297              sbiw R28,2
 0048                   .dbline -1
 0048                   .dbline 32
 0048           ; } 
 0048           ; 
 0048           ; #pragma interrupt_handler usart_read:12
 0048           ; void usart_read(void)                   
 0048           ; {       
 0048           L3:
 0048                   .dbline 33
 0048           ;      while ( !(UCSRA & (1<<RXC)) );     // 等待接收缓存器空
 0048           L4:
 0048                   .dbline 33
 0048 5F9B              sbis 0xb,7
 004A FECF              rjmp L3
 004C           X0:
 004C                   .dbline 34
 004C           ;      getData[k]=UDR;
 004C 80E0              ldi R24,<_getData
 004E 90E0              ldi R25,>_getData
 0050 E0910000          lds R30,_k
 0054 FF27              clr R31
 0056 E80F              add R30,R24
 0058 F91F              adc R31,R25
 005A 2CB0              in R2,0xc
 005C 2082              std z+0,R2
 005E                   .dbline 35
 005E           ;      k++;
 005E 80910000          lds R24,_k
 0062 8F5F              subi R24,255    ; addi 1
 0064 80930000          sts _k,R24
 0068                   .dbline 36
 0068           ;        if((strncmp("green",getData,5))==0)   //修改主干道绿灯时间
 0068 85E0              ldi R24,5
 006A 90E0              ldi R25,0
 006C 9983              std y+1,R25
 006E 8883              std y+0,R24
 0070 20E0              ldi R18,<_getData
 0072 30E0              ldi R19,>_getData
 0074 00E0              ldi R16,<L8
 0076 10E0              ldi R17,>L8
 0078 0E940000          xcall _strncmp
 007C 0030              cpi R16,0
 007E 0107              cpc R16,R17
 0080 09F5              brne L6
 0082           X1:
 0082                   .dbline 37
 0082           ;        { 
 0082                   .dbline 39
 0082           ;           uchar dataBuf;          
 0082           ;               dataBuf = (usart_get()-0x30)*10;
 0082 F7D0              xcall _usart_get
 0084 8AE0              ldi R24,10
 0086 90E0              ldi R25,0
 0088 9801              movw R18,R16
 008A 8C01              movw R16,R24
 008C 0E940000          xcall empy16s
 0090 C801              movw R24,R16
 0092 805E              subi R24,224
 0094 9140              sbci R25,1
 0096 A82E              mov R10,R24
 0098                   .dbline 40
 0098           ;               dataBuf = dataBuf + (usart_get()-0x30);
 0098 ECD0              xcall _usart_get
 009A A801              movw R20,R16
 009C CA01              movw R24,R20
 009E C097              sbiw R24,48
 00A0 2A2C              mov R2,R10
 00A2 3324              clr R3
 00A4 280E              add R2,R24
 00A6 391E              adc R3,R25
 00A8 A22C              mov R10,R2
 00AA                   .dbline 41
 00AA           ;               greenTime = dataBuf;
 00AA A0920100          sts _greenTime,R10
 00AE                   .dbline 42
 00AE           ;               Write_EEprom(greenTime,6);
 00AE 26E0              ldi R18,6
 00B0 30E0              ldi R19,0
 00B2 022D              mov R16,R2
 00B4 1127              clr R17
 00B6 0E940000          xcall _Write_EEprom
 00BA                   .dbline 43
 00BA           ;               usart_send('1');
 00BA 01E3              ldi R16,49
 00BC D4D0              xcall _usart_send
 00BE                   .dbline 44
 00BE           ;         k=0;
 00BE 2224              clr R2
 00C0 20920000          sts _k,R2
 00C4                   .dbline 45
 00C4           ;        }
 00C4           L6:
 00C4                   .dbline 46
 00C4           ;        if((strncmp("red",getData,3))==0)   //修改支干道红灯时间
 00C4 83E0              ldi R24,3
 00C6 90E0              ldi R25,0
 00C8 9983              std y+1,R25
 00CA 8883              std y+0,R24
 00CC 20E0              ldi R18,<_getData
 00CE 30E0              ldi R19,>_getData
 00D0 00E0              ldi R16,<L11
 00D2 10E0              ldi R17,>L11
 00D4 0E940000          xcall _strncmp
 00D8 5801              movw R10,R16
 00DA 0030              cpi R16,0
 00DC 0107              cpc R16,R17
 00DE F9F4              brne L9
 00E0           X2:
 00E0                   .dbline 47
 00E0           ;        { 
 00E0                   .dbline 49
 00E0           ;           uchar dataBuf;          
 00E0           ;               dataBuf = (usart_get()-0x30)*10;
 00E0 C8D0              xcall _usart_get
 00E2 5801              movw R10,R16
 00E4 0AE0              ldi R16,10
 00E6 10E0              ldi R17,0
 00E8 9501              movw R18,R10
 00EA 0E940000          xcall empy16s
 00EE C801              movw R24,R16
 00F0 805E              subi R24,224
 00F2 9140              sbci R25,1
 00F4 A82E              mov R10,R24
 00F6                   .dbline 50
 00F6           ;               dataBuf = dataBuf + (usart_get()-0x30);
 00F6 BDD0              xcall _usart_get
 00F8 A801              movw R20,R16
 00FA CA01              movw R24,R20
 00FC C097              sbiw R24,48
 00FE 2A2C              mov R2,R10
 0100 3324              clr R3
 0102 280E              add R2,R24
 0104 391E              adc R3,R25
 0106 A22C              mov R10,R2
 0108                   .dbline 51
 0108           ;               redTime = dataBuf;
 0108 A0920000          sts _redTime,R10
 010C                   .dbline 52
 010C           ;         Write_EEprom(redTime,5);
 010C 25E0              ldi R18,5
 010E 30E0              ldi R19,0
 0110 022D              mov R16,R2
 0112 1127              clr R17
 0114 0E940000          xcall _Write_EEprom
 0118                   .dbline 53
 0118           ;         k=0;
 0118 2224              clr R2
 011A 20920000          sts _k,R2
 011E                   .dbline 54
 011E           ;        }
 011E           L9:
 011E                   .dbline 55
 011E           ;        if((strncmp("yellow",getData,6))==0)   //修改黄灯时间 
 011E 86E0              ldi R24,6
 0120 90E0              ldi R25,0
 0122 9983              std y+1,R25
 0124 8883              std y+0,R24
 0126 20E0              ldi R18,<_getData
 0128 30E0              ldi R19,>_getData
 012A 00E0              ldi R16,<L14
 012C 10E0              ldi R17,>L14
 012E 0E940000          xcall _strncmp
 0132 5801              movw R10,R16
 0134 0030              cpi R16,0
 0136 0107              cpc R16,R17
 0138 F9F4              brne L12
 013A           X3:
 013A                   .dbline 56
 013A           ;        { 
 013A                   .dbline 58
 013A           ;           uchar dataBuf;          
 013A           ;               dataBuf = (usart_get()-0x30)*10;
 013A 9BD0              xcall _usart_get
 013C 5801              movw R10,R16
 013E 0AE0              ldi R16,10
 0140 10E0              ldi R17,0
 0142 9501              movw R18,R10
 0144 0E940000          xcall empy16s
 0148 C801              movw R24,R16
 014A 805E              subi R24,224
 014C 9140              sbci R25,1
 014E A82E              mov R10,R24
 0150                   .dbline 59
 0150           ;               dataBuf = dataBuf + (usart_get()-0x30);
 0150 90D0              xcall _usart_get
 0152 A801              movw R20,R16
 0154 CA01              movw R24,R20
 0156 C097              sbiw R24,48
 0158 2A2C              mov R2,R10
 015A 3324              clr R3
 015C 280E              add R2,R24
 015E 391E              adc R3,R25
 0160 A22C              mov R10,R2
 0162                   .dbline 60
 0162           ;               yellowTime = dataBuf;
 0162 A0920200          sts _yellowTime,R10
 0166                   .dbline 61
 0166           ;               Write_EEprom(yellowTime,7);
 0166 27E0              ldi R18,7
 0168 30E0              ldi R19,0
 016A 022D              mov R16,R2
 016C 1127              clr R17
 016E 0E940000          xcall _Write_EEprom
 0172                   .dbline 62
 0172           ;         k=0;
 0172 2224              clr R2
 0174 20920000          sts _k,R2
 0178                   .dbline 63
 0178           ;        }
 0178           L12:
 0178                   .dbline 64
 0178           ;        if((strncmp("urgencystart",getData,12))==0)   //紧急情况发生
 0178 8CE0              ldi R24,12
 017A 90E0              ldi R25,0
 017C 9983              std y+1,R25
 017E 8883              std y+0,R24
 0180 20E0              ldi R18,<_getData
 0182 30E0              ldi R19,>_getData
 0184 00E0              ldi R16,<L17
 0186 10E0              ldi R17,>L17
 0188 0E940000          xcall _strncmp
 018C 5801              movw R10,R16
 018E 0030              cpi R16,0
 0190 0107              cpc R16,R17
 0192 51F4              brne L15
 0194           X4:
 0194                   .dbline 65
 0194           ;        { 
 0194                   .dbline 66
 0194           ;           urgencyFlag = 1;
 0194 81E0              ldi R24,1
 0196 80930100          sts _urgencyFlag,R24
 019A                   .dbline 67
 019A           ;               daytimeFlag = 0;
 019A 2224              clr R2
 019C 20920200          sts _daytimeFlag,R2
 01A0                   .dbline 68
 01A0           ;               nightFlag = 0;
 01A0 20920300          sts _nightFlag,R2
 01A4                   .dbline 69
 01A4           ;               k=0;
 01A4 20920000          sts _k,R2
 01A8                   .dbline 70
 01A8           ;        }
 01A8           L15:
 01A8                   .dbline 71
 01A8           ;        if((strncmp("urgencystop",getData,11))==0)   //紧急情况停止
 01A8 8BE0              ldi R24,11
 01AA 90E0              ldi R25,0
 01AC 9983              std y+1,R25
 01AE 8883              std y+0,R24
 01B0 20E0              ldi R18,<_getData
 01B2 30E0              ldi R19,>_getData
 01B4 00E0              ldi R16,<L20
 01B6 10E0              ldi R17,>L20
 01B8 0E940000          xcall _strncmp
 01BC 5801              movw R10,R16
 01BE 0030              cpi R16,0
 01C0 0107              cpc R16,R17
 01C2 61F4              brne L18
 01C4           X5:
 01C4                   .dbline 72
 01C4           ;        { 
 01C4                   .dbline 73
 01C4           ;           urgencyFlag = 0;
 01C4 2224              clr R2
 01C6 20920100          sts _urgencyFlag,R2
 01CA                   .dbline 74
 01CA           ;               daytimeFlag = 1;
 01CA 81E0              ldi R24,1
 01CC 80930200          sts _daytimeFlag,R24
 01D0                   .dbline 75
 01D0           ;               nightFlag = 0;
 01D0 20920300          sts _nightFlag,R2
 01D4                   .dbline 76
 01D4           ;               secCount = 0;
 01D4 20920000          sts _secCount,R2
 01D8                   .dbline 77
 01D8           ;               k=0;
 01D8 20920000          sts _k,R2
 01DC                   .dbline 78
 01DC           ;        }
 01DC           L18:
 01DC                   .dbline 79
 01DC           ;        if((strncmp("timechange",getData,10))==0)   //紧急情况停止
 01DC 8AE0              ldi R24,10
 01DE 90E0              ldi R25,0
 01E0 9983              std y+1,R25
 01E2 8883              std y+0,R24
 01E4 20E0              ldi R18,<_getData
 01E6 30E0              ldi R19,>_getData
 01E8 00E0              ldi R16,<L23
 01EA 10E0              ldi R17,>L23
 01EC 0E940000          xcall _strncmp
 01F0 5801              movw R10,R16
 01F2 0030              cpi R16,0
 01F4 0107              cpc R16,R17
 01F6 E9F4              brne L21
 01F8           X6:
 01F8                   .dbline 80
 01F8           ;        { 
 01F8                   .dbline 83
 01F8           ;           uchar buf,time_buf;
 01F8           ;               
 01F8           ;               time_buf = (usart_get()-0x30)*10;
 01F8 3CD0              xcall _usart_get
 01FA 5801              movw R10,R16
 01FC 0AE0              ldi R16,10
 01FE 10E0              ldi R17,0
 0200 9501              movw R18,R10
 0202 0E940000          xcall empy16s
 0206 C801              movw R24,R16
 0208 805E              subi R24,224
 020A 9140              sbci R25,1
 020C A82E              mov R10,R24
 020E                   .dbline 84
 020E           ;               time_buf = time_buf + (usart_get()-0x30);
 020E 31D0              xcall _usart_get
 0210 A801              movw R20,R16
 0212 CA01              movw R24,R20
 0214 C097              sbiw R24,48
 0216 2A2C              mov R2,R10
 0218 3324              clr R3
 021A 280E              add R2,R24
 021C 391E              adc R3,R25
 021E A22C              mov R10,R2
 0220                   .dbline 85
 0220           ;               TWI_Write(WD_DS1307_ADDR,time_buf,2);
 0220 82E0              ldi R24,2
 0222 8883              std y+0,R24
 0224 222D              mov R18,R2
 0226 00ED              ldi R16,208
 0228 0E940000          xcall _TWI_Write
 022C                   .dbline 88
 022C           ;               
 022C           ;               //usart_send(time_buf);
 022C           ;               k=0;
 022C 2224              clr R2
 022E 20920000          sts _k,R2
 0232                   .dbline 89
 0232           ;        }
 0232           L21:
 0232                   .dbline -2
 0232           L2:
 0232                   .dbline 0 ; func end
 0232 2296              adiw R28,2
 0234 0E940000          xcall pop_xgset300C
 0238 0990              ld R0,y+
 023A 0FBE              OUT 63,R0
 023C F991              ld R31,y+
 023E E991              ld R30,y+
 0240 B991              ld R27,y+
 0242 A991              ld R26,y+
 0244 9991              ld R25,y+
 0246 8991              ld R24,y+
 0248 3991              ld R19,y+
 024A 2991              ld R18,y+
 024C 1991              ld R17,y+
 024E 0991              ld R16,y+
 0250 9990              ld R9,y+
 0252 8990              ld R8,y+
 0254 7990              ld R7,y+
 0256 6990              ld R6,y+
 0258 5990              ld R5,y+
 025A 4990              ld R4,y+
 025C 3990              ld R3,y+
 025E 2990              ld R2,y+
 0260 1990              ld R1,y+
 0262 0990              ld R0,y+
 0264 1895              reti
 0266                   .dbsym l buf 3 c
 0266                   .dbsym r time_buf 10 c
 0266                   .dbsym r dataBuf 10 c
 0266                   .dbsym r dataBuf 10 c
 0266                   .dbsym r dataBuf 10 c
 0266                   .dbend
 0266                   .dbfunc e usart_send _usart_send fV
 0266           ;           data -> R16
                        .even
 0266           _usart_send::
 0266                   .dbline -1
 0266                   .dbline 94
 0266           ; 
 0266           ; }
 0266           ; 
 0266           ; void usart_send(uchar data)             //TXD发送数据
 0266           ; {
 0266           L25:
 0266                   .dbline 96
 0266           ;      
 0266           ;     while(!(UCSRA & (1<<UDRE)));   //等待发送缓存器空
 0266           L26:
 0266                   .dbline 96
 0266 5D9B              sbis 0xb,5
 0268 FECF              rjmp L25
 026A           X7:
 026A                   .dbline 97
 026A           ;     UDR = data;
 026A 0CB9              out 0xc,R16
 026C           L28:
 026C                   .dbline 98
 026C           ;     while(!(UCSRA & (1<<TXC)));    //等待发送结束
 026C           L29:
 026C                   .dbline 98
 026C 5E9B              sbis 0xb,6
 026E FECF              rjmp L28
 0270           X8:
 0270                   .dbline -2
 0270           L24:
 0270                   .dbline 0 ; func end
 0270 0895              ret
 0272                   .dbsym r data 16 c
 0272                   .dbend
 0272                   .dbfunc e usart_get _usart_get fc
                        .even
 0272           _usart_get::
 0272                   .dbline -1
 0272                   .dbline 102
 0272           ; }
 0272           ; 
 0272           ; uchar usart_get()             //RXD接收数据
 0272           ; {
 0272           L32:
 0272                   .dbline 104
 0272           ;     
 0272           ;     while ( !(UCSRA & (1<<RXC)) );     // 等待接收缓存器空
 0272           L33:
 0272                   .dbline 104
 0272 5F9B              sbis 0xb,7
 0274 FECF              rjmp L32
 0276           X9:
 0276                   .dbline 105
 0276           ;       return UDR;
 0276 0CB1              in R16,0xc
 0278                   .dbline -2
 0278           L31:
 0278                   .dbline 0 ; func end
 0278 0895              ret
 027A                   .dbend
                        .area bss(ram, con, rel)
 0000                   .dbfile C:\Users\Administrator\Desktop\TrafficLight595\usart.c
 0000           _redTime::
 0000                   .blkb 1
 0001                   .dbsym e redTime _redTime c
 0001           _greenTime::
 0001                   .blkb 1
 0002                   .dbsym e greenTime _greenTime c
 0002           _yellowTime::
 0002                   .blkb 1
 0003                   .dbsym e yellowTime _yellowTime c
 0003           _getData::
 0003                   .blkb 20
 0017                   .dbsym e getData _getData A[20:20]c
                        .area data(ram, con, rel)
 0004                   .dbfile C:\Users\Administrator\Desktop\TrafficLight595\usart.c
 0004           L23:
 0004                   .blkb 11
                        .area idata
 0004 74696D656368616E676500    .byte 't,'i,'m,'e,'c,'h,'a,'n,'g,'e,0
                        .area data(ram, con, rel)
 000F                   .dbfile C:\Users\Administrator\Desktop\TrafficLight595\usart.c
 000F           L20:
 000F                   .blkb 12
                        .area idata
 000F 757267656E637973746F7000  .byte 'u,'r,'g,'e,'n,'c,'y,'s,'t,'o,'p,0
                        .area data(ram, con, rel)
 001B                   .dbfile C:\Users\Administrator\Desktop\TrafficLight595\usart.c
 001B           L17:
 001B                   .blkb 13
                        .area idata
 001B 757267656E6379737461727400        .byte 'u,'r,'g,'e,'n,'c,'y,'s,'t,'a,'r,'t,0
                        .area data(ram, con, rel)
 0028                   .dbfile C:\Users\Administrator\Desktop\TrafficLight595\usart.c
 0028           L14:
 0028                   .blkb 7
                        .area idata
 0028 79656C6C6F7700    .byte 'y,'e,'l,'l,'o,'w,0
                        .area data(ram, con, rel)
 002F                   .dbfile C:\Users\Administrator\Desktop\TrafficLight595\usart.c
 002F           L11:
 002F                   .blkb 4
                        .area idata
 002F 72656400          .byte 'r,'e,'d,0
                        .area data(ram, con, rel)
 0033                   .dbfile C:\Users\Administrator\Desktop\TrafficLight595\usart.c
 0033           L8:
 0033                   .blkb 6
                        .area idata
 0033 677265656E00      .byte 'g,'r,'e,'e,'n,0
                        .area data(ram, con, rel)
 0039                   .dbfile C:\Users\Administrator\Desktop\TrafficLight595\usart.c
 0039           ; }
 0039           ; 
