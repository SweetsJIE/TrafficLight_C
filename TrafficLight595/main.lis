                        .module main.c
                        .area text(rom, con, rel)
 0000                   .dbfile main.c
                        .area data(ram, con, rel)
 0000                   .dbfile main.c
 0000           _count::
 0000                   .blkb 1
                        .area idata
 0000 00                .byte 0
                        .area data(ram, con, rel)
 0001                   .dbfile main.c
 0001                   .dbfile C:\Users\Administrator\Desktop\交通灯\TrafficLight595\main.c
 0001                   .dbsym e count _count c
 0001           _i::
 0001                   .blkb 1
                        .area idata
 0001 00                .byte 0
                        .area data(ram, con, rel)
 0002                   .dbfile C:\Users\Administrator\Desktop\交通灯\TrafficLight595\main.c
 0002                   .dbsym e i _i c
                        .area text(rom, con, rel)
 0000                   .dbfile C:\Users\Administrator\Desktop\交通灯\TrafficLight595\main.c
 0000                   .dbfunc e io_init _io_init fV
                        .even
 0000           _io_init::
 0000                   .dbline -1
 0000                   .dbline 16
 0000           ; #include<iom16v.h>
 0000           ; #include<macros.h>
 0000           ; #include"MAX7219.h"
 0000           ; #include"74LS139.h"
 0000           ; #include"button.h"
 0000           ; #include"delay.h"
 0000           ; #include"ds1307.h"
 0000           ; #include"twi.h"
 0000           ; #include"usart.h"
 0000           ; #include"HC_595.h"
 0000           ; 
 0000           ; uchar Number_H,Number_L,count=0,i=0;
 0000           ; 
 0000           ; 
 0000           ; void io_init()
 0000           ; {
 0000                   .dbline 17
 0000           ;   DDRA=0xFF;
 0000 8FEF              ldi R24,255
 0002 8ABB              out 0x1a,R24
 0004                   .dbline 18
 0004           ;   PORTA=0x00;
 0004 2224              clr R2
 0006 2BBA              out 0x1b,R2
 0008                   .dbline 19
 0008           ;   DDRB=0xff;
 0008 87BB              out 0x17,R24
 000A                   .dbline 20
 000A           ;   PORTB=0xff;
 000A 88BB              out 0x18,R24
 000C                   .dbline 21
 000C           ;   DDRC=0xe7;
 000C 87EE              ldi R24,231
 000E 84BB              out 0x14,R24
 0010                   .dbline 22
 0010           ;   PORTC=0x00;
 0010 25BA              out 0x15,R2
 0012                   .dbline 23
 0012           ;   DDRD=0x02;
 0012 82E0              ldi R24,2
 0014 81BB              out 0x11,R24
 0016                   .dbline 24
 0016           ;   PORTD=0x04;
 0016 84E0              ldi R24,4
 0018 82BB              out 0x12,R24
 001A                   .dbline -2
 001A           L1:
 001A                   .dbline 0 ; func end
 001A 0895              ret
 001C                   .dbend
 001C                   .dbfunc e main _main fV
                        .even
 001C           _main::
 001C 2197              sbiw R28,1
 001E                   .dbline -1
 001E                   .dbline 28
 001E           ; }
 001E           ; 
 001E           ; void main()
 001E           ; {
 001E                   .dbline 29
 001E           ;   io_init();
 001E F0DF              xcall _io_init
 0020                   .dbline 30
 0020           ;   TWI_init();
 0020 0E940000          xcall _TWI_init
 0024                   .dbline 31
 0024           ;   TWI_Write(WD_DS1307_ADDR,0X10,7);           //设置ds1307输出方波
 0024 87E0              ldi R24,7
 0026 8883              std y+0,R24
 0028 20E1              ldi R18,16
 002A 00ED              ldi R16,208
 002C 0E940000          xcall _TWI_Write
 0030                   .dbline 32
 0030           ;   int2_init();
 0030 0E940000          xcall _int2_init
 0034                   .dbline 33
 0034           ;   usart_init();
 0034 0E940000          xcall _usart_init
 0038                   .dbline 34
 0038           ;   HC_595_init();
 0038 0E940000          xcall _HC_595_init
 003C                   .dbline 36
 003C           ;   
 003C           ;   redTime = Read_EEprom(5);      //读取红绿黄灯的时间
 003C 05E0              ldi R16,5
 003E 10E0              ldi R17,0
 0040 0E940000          xcall _Read_EEprom
 0044 00930000          sts _redTime,R16
 0048                   .dbline 37
 0048           ;   greenTime = Read_EEprom(6);
 0048 06E0              ldi R16,6
 004A 10E0              ldi R17,0
 004C 0E940000          xcall _Read_EEprom
 0050 00930000          sts _greenTime,R16
 0054                   .dbline 38
 0054           ;   yellowTime = Read_EEprom(7);
 0054 07E0              ldi R16,7
 0056 10E0              ldi R17,0
 0058 0E940000          xcall _Read_EEprom
 005C 5801              movw R10,R16
 005E A0920000          sts _yellowTime,R10
 0062                   .dbline 41
 0062           ;   
 0062           ;   
 0062           ;   SREG|=BIT(7);
 0062 7894              bset 7
 0064 85C2              xjmp L4
 0066           L3:
 0066                   .dbline 54
 0066           ;   
 0066           ;   //修改时间
 0066           ;   /*
 0066           ;   TWI_Write(WD_DS1307_ADDR,00,0);
 0066           ;   TWI_Write(WD_DS1307_ADDR,21,1);
 0066           ;   TWI_Write(WD_DS1307_ADDR,14,2);
 0066           ;   TWI_Write(WD_DS1307_ADDR,17,4);
 0066           ;   TWI_Write(WD_DS1307_ADDR,03,5);
 0066           ;   TWI_Write(WD_DS1307_ADDR,17,6);
 0066           ;   */
 0066           ; 
 0066           ;   while(1)
 0066           ;   {
 0066                   .dbline 55
 0066           ;     if(daytimeFlag)
 0066 20900000          lds R2,_daytimeFlag
 006A 2220              tst R2
 006C 09F4              brne X25
 006E 35C2              xjmp L6
 0070           X25:
 0070           X0:
 0070                   .dbline 56
 0070           ;       {
 0070                   .dbline 57
 0070           ;         LS139_G_L;
 0070 DC98              cbi 0x1b,4
 0072                   .dbline 58
 0072           ;         GICR |= (1<<INT2);                    //打开外部中断2
 0072 8BB7              in R24,0x3b
 0074 8062              ori R24,32
 0076 8BBF              out 0x3b,R24
 0078 53C0              xjmp L9
 007A           L8:
 007A                   .dbline 60
 007A           ;         while(secCount<=greenTime)
 007A           ;         {
 007A                   .dbline 61
 007A           ;           if(urgencyFlag || nightFlag)break;
 007A 20900000          lds R2,_urgencyFlag
 007E 2220              tst R2
 0080 21F4              brne L13
 0082           X1:
 0082 20900000          lds R2,_nightFlag
 0086 2220              tst R2
 0088 09F0              breq L11
 008A           X2:
 008A           L13:
 008A                   .dbline 61
 008A C3C0              xjmp L15
 008C           L11:
 008C                   .dbline 62
 008C           ;           Write_Data(1,decode_H(greenTime+yellowTime-secCount));
 008C 20900000          lds R2,_yellowTime
 0090 3324              clr R3
 0092 00910000          lds R16,_greenTime
 0096 1127              clr R17
 0098 020D              add R16,R2
 009A 131D              adc R17,R3
 009C 20900000          lds R2,_secCount
 00A0 3324              clr R3
 00A2 0219              sub R16,R2
 00A4 1309              sbc R17,R3
 00A6 67D2              xcall _decode_H
 00A8 5801              movw R10,R16
 00AA 9501              movw R18,R10
 00AC 01E0              ldi R16,1
 00AE 10E0              ldi R17,0
 00B0 0E940000          xcall _Write_Data
 00B4                   .dbline 63
 00B4           ;         Write_Data(2,decode_L(greenTime+yellowTime-secCount));
 00B4 20900000          lds R2,_yellowTime
 00B8 3324              clr R3
 00BA 00910000          lds R16,_greenTime
 00BE 1127              clr R17
 00C0 020D              add R16,R2
 00C2 131D              adc R17,R3
 00C4 20900000          lds R2,_secCount
 00C8 3324              clr R3
 00CA 0219              sub R16,R2
 00CC 1309              sbc R17,R3
 00CE 5DD2              xcall _decode_L
 00D0 5801              movw R10,R16
 00D2 9501              movw R18,R10
 00D4 02E0              ldi R16,2
 00D6 10E0              ldi R17,0
 00D8 0E940000          xcall _Write_Data
 00DC                   .dbline 64
 00DC           ;               Write_Data(3,decode_H(greenTime-secCount));
 00DC 20900000          lds R2,_secCount
 00E0 3324              clr R3
 00E2 00910000          lds R16,_greenTime
 00E6 1127              clr R17
 00E8 0219              sub R16,R2
 00EA 1309              sbc R17,R3
 00EC 44D2              xcall _decode_H
 00EE 5801              movw R10,R16
 00F0 9501              movw R18,R10
 00F2 03E0              ldi R16,3
 00F4 10E0              ldi R17,0
 00F6 0E940000          xcall _Write_Data
 00FA                   .dbline 65
 00FA           ;         Write_Data(4,decode_L(greenTime-secCount));
 00FA 20900000          lds R2,_secCount
 00FE 3324              clr R3
 0100 00910000          lds R16,_greenTime
 0104 1127              clr R17
 0106 0219              sub R16,R2
 0108 1309              sbc R17,R3
 010A 3FD2              xcall _decode_L
 010C 5801              movw R10,R16
 010E 9501              movw R18,R10
 0110 04E0              ldi R16,4
 0112 10E0              ldi R17,0
 0114 0E940000          xcall _Write_Data
 0118                   .dbline 66
 0118           ;               main_green();
 0118 0E940000          xcall _main_green
 011C                   .dbline 67
 011C           ;               second_red();
 011C 0E940000          xcall _second_red
 0120                   .dbline 68
 0120           ;         }
 0120           L9:
 0120                   .dbline 59
 0120 20900000          lds R2,_greenTime
 0124 3324              clr R3
 0126 40900000          lds R4,_secCount
 012A 5524              clr R5
 012C 2414              cp R2,R4
 012E 3504              cpc R3,R5
 0130 0CF0              brlt X26
 0132 A3CF              xjmp L8
 0134           X26:
 0134           X3:
 0134 6EC0              xjmp L15
 0136           L14:
 0136                   .dbline 70
 0136           ;         while(secCount>greenTime&&secCount<=(greenTime+yellowTime))
 0136           ;         {
 0136                   .dbline 71
 0136           ;           if(urgencyFlag || nightFlag)break;
 0136 20900000          lds R2,_urgencyFlag
 013A 2220              tst R2
 013C 21F4              brne L19
 013E           X4:
 013E 20900000          lds R2,_nightFlag
 0142 2220              tst R2
 0144 09F0              breq L17
 0146           X5:
 0146           L19:
 0146                   .dbline 71
 0146 F7C0              xjmp L26
 0148           L17:
 0148                   .dbline 72
 0148           ;           Write_Data(1,decode_H(greenTime+yellowTime-secCount));
 0148 20900000          lds R2,_yellowTime
 014C 3324              clr R3
 014E 00910000          lds R16,_greenTime
 0152 1127              clr R17
 0154 020D              add R16,R2
 0156 131D              adc R17,R3
 0158 20900000          lds R2,_secCount
 015C 3324              clr R3
 015E 0219              sub R16,R2
 0160 1309              sbc R17,R3
 0162 09D2              xcall _decode_H
 0164 5801              movw R10,R16
 0166 9501              movw R18,R10
 0168 01E0              ldi R16,1
 016A 10E0              ldi R17,0
 016C 0E940000          xcall _Write_Data
 0170                   .dbline 73
 0170           ;         Write_Data(2,decode_L(greenTime+yellowTime-secCount));
 0170 20900000          lds R2,_yellowTime
 0174 3324              clr R3
 0176 00910000          lds R16,_greenTime
 017A 1127              clr R17
 017C 020D              add R16,R2
 017E 131D              adc R17,R3
 0180 20900000          lds R2,_secCount
 0184 3324              clr R3
 0186 0219              sub R16,R2
 0188 1309              sbc R17,R3
 018A FFD1              xcall _decode_L
 018C 5801              movw R10,R16
 018E 9501              movw R18,R10
 0190 02E0              ldi R16,2
 0192 10E0              ldi R17,0
 0194 0E940000          xcall _Write_Data
 0198                   .dbline 74
 0198           ;               Write_Data(3,decode_H(greenTime+yellowTime-secCount));
 0198 20900000          lds R2,_yellowTime
 019C 3324              clr R3
 019E 00910000          lds R16,_greenTime
 01A2 1127              clr R17
 01A4 020D              add R16,R2
 01A6 131D              adc R17,R3
 01A8 20900000          lds R2,_secCount
 01AC 3324              clr R3
 01AE 0219              sub R16,R2
 01B0 1309              sbc R17,R3
 01B2 E1D1              xcall _decode_H
 01B4 5801              movw R10,R16
 01B6 9501              movw R18,R10
 01B8 03E0              ldi R16,3
 01BA 10E0              ldi R17,0
 01BC 0E940000          xcall _Write_Data
 01C0                   .dbline 75
 01C0           ;         Write_Data(4,decode_L(greenTime+yellowTime-secCount));
 01C0 20900000          lds R2,_yellowTime
 01C4 3324              clr R3
 01C6 00910000          lds R16,_greenTime
 01CA 1127              clr R17
 01CC 020D              add R16,R2
 01CE 131D              adc R17,R3
 01D0 20900000          lds R2,_secCount
 01D4 3324              clr R3
 01D6 0219              sub R16,R2
 01D8 1309              sbc R17,R3
 01DA D7D1              xcall _decode_L
 01DC 5801              movw R10,R16
 01DE 9501              movw R18,R10
 01E0 04E0              ldi R16,4
 01E2 10E0              ldi R17,0
 01E4 0E940000          xcall _Write_Data
 01E8                   .dbline 76
 01E8           ;               i++;
 01E8 80910100          lds R24,_i
 01EC 8F5F              subi R24,255    ; addi 1
 01EE 80930100          sts _i,R24
 01F2                   .dbline 77
 01F2           ;               if(i==25)main_yellow();   //黄闪
 01F2 8931              cpi R24,25
 01F4 19F4              brne L20
 01F6           X6:
 01F6                   .dbline 77
 01F6 0E940000          xcall _main_yellow
 01FA 09C0              xjmp L21
 01FC           L20:
 01FC                   .dbline 78
 01FC           ;               else if(i==50)
 01FC 80910100          lds R24,_i
 0200 8233              cpi R24,50
 0202 29F4              brne L22
 0204           X7:
 0204                   .dbline 79
 0204           ;               {
 0204                   .dbline 80
 0204           ;                 main_close();
 0204 0E940000          xcall _main_close
 0208                   .dbline 81
 0208           ;                 i=0;
 0208 2224              clr R2
 020A 20920100          sts _i,R2
 020E                   .dbline 82
 020E           ;               }
 020E           L22:
 020E           L21:
 020E                   .dbline 83
 020E           ;               second_red();
 020E 0E940000          xcall _second_red
 0212                   .dbline 84
 0212           ;         }
 0212           L15:
 0212                   .dbline 69
 0212 A0900000          lds R10,_secCount
 0216 C0900000          lds R12,_greenTime
 021A 2C2C              mov R2,R12
 021C 3324              clr R3
 021E 4A2C              mov R4,R10
 0220 5524              clr R5
 0222 2414              cp R2,R4
 0224 3504              cpc R3,R5
 0226 6CF4              brge L24
 0228           X8:
 0228 20900000          lds R2,_yellowTime
 022C 3324              clr R3
 022E 4C2C              mov R4,R12
 0230 5524              clr R5
 0232 420C              add R4,R2
 0234 531C              adc R5,R3
 0236 2A2C              mov R2,R10
 0238 3324              clr R3
 023A 4214              cp R4,R2
 023C 5304              cpc R5,R3
 023E 0CF0              brlt X27
 0240 7ACF              xjmp L14
 0242           X27:
 0242           X9:
 0242           L24:
 0242 79C0              xjmp L26
 0244           L25:
 0244                   .dbline 86
 0244           ;         while(secCount>(greenTime+yellowTime)&&secCount<=(greenTime+yellowTime+redTime))
 0244           ;         {
 0244                   .dbline 87
 0244           ;           if(urgencyFlag || nightFlag)break;
 0244 20900000          lds R2,_urgencyFlag
 0248 2220              tst R2
 024A 21F4              brne L30
 024C           X10:
 024C 20900000          lds R2,_nightFlag
 0250 2220              tst R2
 0252 09F0              breq L28
 0254           X11:
 0254           L30:
 0254                   .dbline 87
 0254 22C1              xjmp L33
 0256           L28:
 0256                   .dbline 88
 0256           ;           Write_Data(1,decode_H(greenTime+yellowTime+redTime-secCount));
 0256 20900000          lds R2,_yellowTime
 025A 3324              clr R3
 025C 00910000          lds R16,_greenTime
 0260 1127              clr R17
 0262 020D              add R16,R2
 0264 131D              adc R17,R3
 0266 20900000          lds R2,_redTime
 026A 3324              clr R3
 026C 020D              add R16,R2
 026E 131D              adc R17,R3
 0270 20900000          lds R2,_secCount
 0274 3324              clr R3
 0276 0219              sub R16,R2
 0278 1309              sbc R17,R3
 027A 7DD1              xcall _decode_H
 027C 5801              movw R10,R16
 027E 9501              movw R18,R10
 0280 01E0              ldi R16,1
 0282 10E0              ldi R17,0
 0284 0E940000          xcall _Write_Data
 0288                   .dbline 89
 0288           ;         Write_Data(2,decode_L(greenTime+yellowTime+redTime-secCount));
 0288 20900000          lds R2,_yellowTime
 028C 3324              clr R3
 028E 00910000          lds R16,_greenTime
 0292 1127              clr R17
 0294 020D              add R16,R2
 0296 131D              adc R17,R3
 0298 20900000          lds R2,_redTime
 029C 3324              clr R3
 029E 020D              add R16,R2
 02A0 131D              adc R17,R3
 02A2 20900000          lds R2,_secCount
 02A6 3324              clr R3
 02A8 0219              sub R16,R2
 02AA 1309              sbc R17,R3
 02AC 6ED1              xcall _decode_L
 02AE 5801              movw R10,R16
 02B0 9501              movw R18,R10
 02B2 02E0              ldi R16,2
 02B4 10E0              ldi R17,0
 02B6 0E940000          xcall _Write_Data
 02BA                   .dbline 90
 02BA           ;               Write_Data(3,decode_H(greenTime+yellowTime+yellowTime+redTime-secCount));
 02BA A0900000          lds R10,_yellowTime
 02BE 2A2C              mov R2,R10
 02C0 3324              clr R3
 02C2 00910000          lds R16,_greenTime
 02C6 1127              clr R17
 02C8 020D              add R16,R2
 02CA 131D              adc R17,R3
 02CC 3324              clr R3
 02CE 020D              add R16,R2
 02D0 131D              adc R17,R3
 02D2 20900000          lds R2,_redTime
 02D6 3324              clr R3
 02D8 020D              add R16,R2
 02DA 131D              adc R17,R3
 02DC 20900000          lds R2,_secCount
 02E0 3324              clr R3
 02E2 0219              sub R16,R2
 02E4 1309              sbc R17,R3
 02E6 47D1              xcall _decode_H
 02E8 5801              movw R10,R16
 02EA 9501              movw R18,R10
 02EC 03E0              ldi R16,3
 02EE 10E0              ldi R17,0
 02F0 0E940000          xcall _Write_Data
 02F4                   .dbline 91
 02F4           ;         Write_Data(4,decode_L(greenTime+yellowTime+yellowTime+redTime-secCount));
 02F4 A0900000          lds R10,_yellowTime
 02F8 2A2C              mov R2,R10
 02FA 3324              clr R3
 02FC 00910000          lds R16,_greenTime
 0300 1127              clr R17
 0302 020D              add R16,R2
 0304 131D              adc R17,R3
 0306 3324              clr R3
 0308 020D              add R16,R2
 030A 131D              adc R17,R3
 030C 20900000          lds R2,_redTime
 0310 3324              clr R3
 0312 020D              add R16,R2
 0314 131D              adc R17,R3
 0316 20900000          lds R2,_secCount
 031A 3324              clr R3
 031C 0219              sub R16,R2
 031E 1309              sbc R17,R3
 0320 34D1              xcall _decode_L
 0322 5801              movw R10,R16
 0324 9501              movw R18,R10
 0326 04E0              ldi R16,4
 0328 10E0              ldi R17,0
 032A 0E940000          xcall _Write_Data
 032E                   .dbline 92
 032E           ;               main_red();
 032E 0E940000          xcall _main_red
 0332                   .dbline 93
 0332           ;               second_green();
 0332 0E940000          xcall _second_green
 0336                   .dbline 94
 0336           ;         }
 0336           L26:
 0336                   .dbline 85
 0336 A0900000          lds R10,_secCount
 033A 20900000          lds R2,_yellowTime
 033E 3324              clr R3
 0340 C0900000          lds R12,_greenTime
 0344 DD24              clr R13
 0346 C20C              add R12,R2
 0348 D31C              adc R13,R3
 034A 2A2C              mov R2,R10
 034C 3324              clr R3
 034E C214              cp R12,R2
 0350 D304              cpc R13,R3
 0352 64F4              brge L31
 0354           X12:
 0354 20900000          lds R2,_redTime
 0358 3324              clr R3
 035A 2601              movw R4,R12
 035C 420C              add R4,R2
 035E 531C              adc R5,R3
 0360 2A2C              mov R2,R10
 0362 3324              clr R3
 0364 4214              cp R4,R2
 0366 5304              cpc R5,R3
 0368 0CF0              brlt X28
 036A 6CCF              xjmp L25
 036C           X28:
 036C           X13:
 036C           L31:
 036C 96C0              xjmp L33
 036E           L32:
 036E                   .dbline 96
 036E           ;         while(secCount>(greenTime+yellowTime+redTime)&&secCount<=(greenTime+yellowTime+redTime+yellowTime))
 036E           ;         {
 036E                   .dbline 97
 036E           ;           if(urgencyFlag ||nightFlag)break;
 036E 20900000          lds R2,_urgencyFlag
 0372 2220              tst R2
 0374 21F4              brne L37
 0376           X14:
 0376 20900000          lds R2,_nightFlag
 037A 2220              tst R2
 037C 09F0              breq L35
 037E           X15:
 037E           L37:
 037E                   .dbline 97
 037E ADC0              xjmp L34
 0380           L35:
 0380                   .dbline 98
 0380           ;           Write_Data(1,decode_H(greenTime+yellowTime+redTime+yellowTime-secCount));
 0380 A0900000          lds R10,_yellowTime
 0384 2A2C              mov R2,R10
 0386 3324              clr R3
 0388 00910000          lds R16,_greenTime
 038C 1127              clr R17
 038E 020D              add R16,R2
 0390 131D              adc R17,R3
 0392 20900000          lds R2,_redTime
 0396 3324              clr R3
 0398 020D              add R16,R2
 039A 131D              adc R17,R3
 039C 2A2C              mov R2,R10
 039E 3324              clr R3
 03A0 020D              add R16,R2
 03A2 131D              adc R17,R3
 03A4 20900000          lds R2,_secCount
 03A8 3324              clr R3
 03AA 0219              sub R16,R2
 03AC 1309              sbc R17,R3
 03AE E3D0              xcall _decode_H
 03B0 5801              movw R10,R16
 03B2 9501              movw R18,R10
 03B4 01E0              ldi R16,1
 03B6 10E0              ldi R17,0
 03B8 0E940000          xcall _Write_Data
 03BC                   .dbline 99
 03BC           ;         Write_Data(2,decode_L(greenTime+yellowTime+redTime+yellowTime-secCount));
 03BC A0900000          lds R10,_yellowTime
 03C0 2A2C              mov R2,R10
 03C2 3324              clr R3
 03C4 00910000          lds R16,_greenTime
 03C8 1127              clr R17
 03CA 020D              add R16,R2
 03CC 131D              adc R17,R3
 03CE 20900000          lds R2,_redTime
 03D2 3324              clr R3
 03D4 020D              add R16,R2
 03D6 131D              adc R17,R3
 03D8 2A2C              mov R2,R10
 03DA 3324              clr R3
 03DC 020D              add R16,R2
 03DE 131D              adc R17,R3
 03E0 20900000          lds R2,_secCount
 03E4 3324              clr R3
 03E6 0219              sub R16,R2
 03E8 1309              sbc R17,R3
 03EA CFD0              xcall _decode_L
 03EC 5801              movw R10,R16
 03EE 9501              movw R18,R10
 03F0 02E0              ldi R16,2
 03F2 10E0              ldi R17,0
 03F4 0E940000          xcall _Write_Data
 03F8                   .dbline 100
 03F8           ;               Write_Data(3,decode_H(greenTime+yellowTime+redTime+yellowTime-secCount));
 03F8 A0900000          lds R10,_yellowTime
 03FC 2A2C              mov R2,R10
 03FE 3324              clr R3
 0400 00910000          lds R16,_greenTime
 0404 1127              clr R17
 0406 020D              add R16,R2
 0408 131D              adc R17,R3
 040A 20900000          lds R2,_redTime
 040E 3324              clr R3
 0410 020D              add R16,R2
 0412 131D              adc R17,R3
 0414 2A2C              mov R2,R10
 0416 3324              clr R3
 0418 020D              add R16,R2
 041A 131D              adc R17,R3
 041C 20900000          lds R2,_secCount
 0420 3324              clr R3
 0422 0219              sub R16,R2
 0424 1309              sbc R17,R3
 0426 A7D0              xcall _decode_H
 0428 5801              movw R10,R16
 042A 9501              movw R18,R10
 042C 03E0              ldi R16,3
 042E 10E0              ldi R17,0
 0430 0E940000          xcall _Write_Data
 0434                   .dbline 101
 0434           ;         Write_Data(4,decode_L(greenTime+yellowTime+redTime+yellowTime-secCount));
 0434 A0900000          lds R10,_yellowTime
 0438 2A2C              mov R2,R10
 043A 3324              clr R3
 043C 00910000          lds R16,_greenTime
 0440 1127              clr R17
 0442 020D              add R16,R2
 0444 131D              adc R17,R3
 0446 20900000          lds R2,_redTime
 044A 3324              clr R3
 044C 020D              add R16,R2
 044E 131D              adc R17,R3
 0450 2A2C              mov R2,R10
 0452 3324              clr R3
 0454 020D              add R16,R2
 0456 131D              adc R17,R3
 0458 20900000          lds R2,_secCount
 045C 3324              clr R3
 045E 0219              sub R16,R2
 0460 1309              sbc R17,R3
 0462 93D0              xcall _decode_L
 0464 5801              movw R10,R16
 0466 9501              movw R18,R10
 0468 04E0              ldi R16,4
 046A 10E0              ldi R17,0
 046C 0E940000          xcall _Write_Data
 0470                   .dbline 102
 0470           ;               i++;
 0470 80910100          lds R24,_i
 0474 8F5F              subi R24,255    ; addi 1
 0476 80930100          sts _i,R24
 047A                   .dbline 103
 047A           ;               if(i==25)second_yellow();   //黄闪
 047A 8931              cpi R24,25
 047C 19F4              brne L38
 047E           X16:
 047E                   .dbline 103
 047E 0E940000          xcall _second_yellow
 0482 09C0              xjmp L39
 0484           L38:
 0484                   .dbline 104
 0484           ;               else if(i==50)
 0484 80910100          lds R24,_i
 0488 8233              cpi R24,50
 048A 29F4              brne L40
 048C           X17:
 048C                   .dbline 105
 048C           ;               {
 048C                   .dbline 106
 048C           ;                 second_close();
 048C 0E940000          xcall _second_close
 0490                   .dbline 107
 0490           ;                 i=0;
 0490 2224              clr R2
 0492 20920100          sts _i,R2
 0496                   .dbline 108
 0496           ;               }
 0496           L40:
 0496           L39:
 0496                   .dbline 109
 0496           ;               main_red();
 0496 0E940000          xcall _main_red
 049A                   .dbline 110
 049A           ;         }
 049A           L33:
 049A                   .dbline 95
 049A A0900000          lds R10,_secCount
 049E E0900000          lds R14,_yellowTime
 04A2 2E2C              mov R2,R14
 04A4 3324              clr R3
 04A6 C0900000          lds R12,_greenTime
 04AA DD24              clr R13
 04AC C20C              add R12,R2
 04AE D31C              adc R13,R3
 04B0 20900000          lds R2,_redTime
 04B4 3324              clr R3
 04B6 C20C              add R12,R2
 04B8 D31C              adc R13,R3
 04BA 2A2C              mov R2,R10
 04BC 3324              clr R3
 04BE C214              cp R12,R2
 04C0 D304              cpc R13,R3
 04C2 5CF4              brge L42
 04C4           X18:
 04C4 2E2C              mov R2,R14
 04C6 3324              clr R3
 04C8 2601              movw R4,R12
 04CA 420C              add R4,R2
 04CC 531C              adc R5,R3
 04CE 2A2C              mov R2,R10
 04D0 3324              clr R3
 04D2 4214              cp R4,R2
 04D4 5304              cpc R5,R3
 04D6 0CF0              brlt X29
 04D8 4ACF              xjmp L32
 04DA           X29:
 04DA           X19:
 04DA           L42:
 04DA           L34:
 04DA                   .dbline 111
 04DA           ;       }
 04DA           L6:
 04DA                   .dbline 113
 04DA           ;       
 04DA           ;       if(nightFlag)            //夜间模式
 04DA 20900000          lds R2,_nightFlag
 04DE 2220              tst R2
 04E0 E1F0              breq L43
 04E2           X20:
 04E2                   .dbline 114
 04E2           ;       { 
 04E2                   .dbline 116
 04E2           ;         //Write_Max7219(0x0c, 0x00);
 04E2           ;         Drive_HC595(0x00,0);
 04E2 2227              clr R18
 04E4 3327              clr R19
 04E6 0027              clr R16
 04E8 1127              clr R17
 04EA 0E940000          xcall _Drive_HC595
 04EE                   .dbline 117
 04EE           ;         Drive_HC595(0x00,1);
 04EE 21E0              ldi R18,1
 04F0 30E0              ldi R19,0
 04F2 0027              clr R16
 04F4 1127              clr R17
 04F6 0E940000          xcall _Drive_HC595
 04FA                   .dbline 118
 04FA           ;         main_yellow();
 04FA 0E940000          xcall _main_yellow
 04FE                   .dbline 119
 04FE           ;         second_yellow();
 04FE 0E940000          xcall _second_yellow
 0502                   .dbline 120
 0502           ;         delay_nms(500);
 0502 04EF              ldi R16,500
 0504 11E0              ldi R17,1
 0506 0E940000          xcall _delay_nms
 050A                   .dbline 121
 050A           ;         main_close();
 050A 0E940000          xcall _main_close
 050E                   .dbline 122
 050E           ;         second_close();
 050E 0E940000          xcall _second_close
 0512                   .dbline 123
 0512           ;         delay_nms(500);
 0512 04EF              ldi R16,500
 0514 11E0              ldi R17,1
 0516 0E940000          xcall _delay_nms
 051A                   .dbline 124
 051A           ;       }
 051A           L43:
 051A                   .dbline 126
 051A           ;       
 051A           ;       if(urgencyFlag)        //紧急模式
 051A 20900000          lds R2,_urgencyFlag
 051E 2220              tst R2
 0520 31F1              breq L45
 0522           X21:
 0522                   .dbline 127
 0522           ;       {
 0522                   .dbline 129
 0522           ;         //GICR &= ~(1<<INT2);                 //关闭外部中断2
 0522           ;         main_red();
 0522 0E940000          xcall _main_red
 0526                   .dbline 130
 0526           ;         second_red();
 0526 0E940000          xcall _second_red
 052A 20C0              xjmp L48
 052C           L47:
 052C                   .dbline 132
 052C           ;         while(1)
 052C           ;         {
 052C                   .dbline 133
 052C           ;           if(urgencyFlag==0)break;
 052C 20900000          lds R2,_urgencyFlag
 0530 2220              tst R2
 0532 09F4              brne L50
 0534           X22:
 0534                   .dbline 133
 0534 1CC0              xjmp L49
 0536           L50:
 0536                   .dbline 134
 0536           ;           LS139_G_H;
 0536 DC98              cbi 0x1b,4
 0538                   .dbline 135
 0538           ;               Write_Data(0,10);  //数码管全亮
 0538 2AE0              ldi R18,10
 053A 30E0              ldi R19,0
 053C 0027              clr R16
 053E 1127              clr R17
 0540 0E940000          xcall _Write_Data
 0544                   .dbline 136
 0544           ;               delay_nms(500);
 0544 04EF              ldi R16,500
 0546 11E0              ldi R17,1
 0548 0E940000          xcall _delay_nms
 054C                   .dbline 137
 054C           ;               LS139_G_L;
 054C DC98              cbi 0x1b,4
 054E                   .dbline 138
 054E           ;               Write_Data(0,11);  //数码管全灭
 054E 2BE0              ldi R18,11
 0550 30E0              ldi R19,0
 0552 0027              clr R16
 0554 1127              clr R17
 0556 0E940000          xcall _Write_Data
 055A                   .dbline 139
 055A           ;               if(urgencyFlag==0)break;
 055A 20900000          lds R2,_urgencyFlag
 055E 2220              tst R2
 0560 09F4              brne L52
 0562           X23:
 0562                   .dbline 139
 0562 05C0              xjmp L49
 0564           L52:
 0564                   .dbline 140
 0564           ;               delay_nms(500);
 0564 04EF              ldi R16,500
 0566 11E0              ldi R17,1
 0568 0E940000          xcall _delay_nms
 056C                   .dbline 141
 056C           ;         }
 056C           L48:
 056C                   .dbline 131
 056C DFCF              xjmp L47
 056E           L49:
 056E                   .dbline 142
 056E           ;       }
 056E           L45:
 056E                   .dbline 143
 056E           ;       if(0)        //紧急模式
 056E 00C0              xjmp L54
 0570           L54:
 0570                   .dbline 149
 0570           ;       {
 0570           ;         //main_yellow();
 0570           ;         second_yellow();
 0570           ;         
 0570           ;       }
 0570           ;   }
 0570           L4:
 0570                   .dbline 53
 0570 7ACD              xjmp L3
 0572           X24:
 0572                   .dbline -2
 0572           L2:
 0572                   .dbline 0 ; func end
 0572 2196              adiw R28,1
 0574 0895              ret
 0576                   .dbend
 0576                   .dbfunc e decode_H _decode_H fV
 0576           ;           data -> R10
                        .even
 0576           _decode_H::
 0576 AA92              st -y,R10
 0578 A02E              mov R10,R16
 057A                   .dbline -1
 057A                   .dbline 156
 057A           ;   
 057A           ;   
 057A           ; }
 057A           ; 
 057A           ; //把秒数十位和个位分拆开
 057A           ; void decode_H(uchar data)
 057A           ; {
 057A                   .dbline 157
 057A           ;   Number_H=data/10;
 057A 1AE0              ldi R17,10
 057C 0A2D              mov R16,R10
 057E 0E940000          xcall div8u
 0582 00930100          sts _Number_H,R16
 0586                   .dbline -2
 0586           L56:
 0586                   .dbline 0 ; func end
 0586 A990              ld R10,y+
 0588 0895              ret
 058A                   .dbsym r data 10 c
 058A                   .dbend
 058A                   .dbfunc e decode_L _decode_L fV
 058A           ;           data -> R10
                        .even
 058A           _decode_L::
 058A AA92              st -y,R10
 058C A02E              mov R10,R16
 058E                   .dbline -1
 058E                   .dbline 160
 058E           ; }
 058E           ; void decode_L(uchar data)
 058E           ; {
 058E                   .dbline 161
 058E           ;   Number_L=data%10;
 058E 1AE0              ldi R17,10
 0590 0A2D              mov R16,R10
 0592 0E940000          xcall mod8u
 0596 00930000          sts _Number_L,R16
 059A                   .dbline -2
 059A           L57:
 059A                   .dbline 0 ; func end
 059A A990              ld R10,y+
 059C 0895              ret
 059E                   .dbsym r data 10 c
 059E                   .dbend
                        .area bss(ram, con, rel)
 0000                   .dbfile C:\Users\Administrator\Desktop\交通灯\TrafficLight595\main.c
 0000           _Number_L::
 0000                   .blkb 1
 0001                   .dbsym e Number_L _Number_L c
 0001           _Number_H::
 0001                   .blkb 1
 0002                   .dbsym e Number_H _Number_H c
 0002           ; }
