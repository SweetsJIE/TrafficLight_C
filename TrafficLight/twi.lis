                        .module twi.c
                        .area text(rom, con, rel)
 0000                   .dbfile twi.c
 0000                   .dbfile C:\Users\Administrator\Desktop\交通灯\twi.c
 0000                   .dbfunc e TWI_init _TWI_init fV
                        .even
 0000           _TWI_init::
 0000                   .dbline -1
 0000                   .dbline 10
 0000           ; /********************************************************************
 0000           ;             利用i2c对外部e2prom进行读写操作
 0000           ; ********************************************************************/
 0000           ; #include <iom16v.h>
 0000           ; #include <macros.h>
 0000           ; #include"twi.h"
 0000           ; 
 0000           ; 
 0000           ; void TWI_init(void)
 0000           ; {  
 0000                   .dbline 11
 0000           ;    TWBR=0X0F;      //比特率
 0000 8FE0              ldi R24,15
 0002 80B9              out 0x0,R24
 0004                   .dbline 12
 0004           ;    TWSR=0;         //1分频
 0004 2224              clr R2
 0006 21B8              out 0x1,R2
 0008                   .dbline -2
 0008           L1:
 0008                   .dbline 0 ; func end
 0008 0895              ret
 000A                   .dbend
 000A                   .dbfunc e TWI_Write _TWI_Write fc
 000A           ;     RegAddress -> R12
 000A           ;          Wdata -> R10
 000A           ;   SlaveAddress -> R14
                        .even
 000A           _TWI_Write::
 000A 0E940000          xcall push_xgset00FC
 000E A22E              mov R10,R18
 0010 E02E              mov R14,R16
 0012 CE80              ldd R12,y+6
 0014                   .dbline -1
 0014                   .dbline 16
 0014           ; }
 0014           ; 
 0014           ; uchar TWI_Write(uchar SlaveAddress,uchar Wdata,uchar RegAddress)
 0014           ; {
 0014                   .dbline 17
 0014           ;    Start();                              //TWI启动
 0014 84EA              ldi R24,164
 0016 86BF              out 0x36,R24
 0018                   .dbline 18
 0018           ;    Wait();
 0018           L3:
 0018                   .dbline 18
 0018           L4:
 0018                   .dbline 18
 0018 26B6              in R2,0x36
 001A 27FE              sbrs R2,7
 001C FDCF              rjmp L3
 001E           X0:
 001E                   .dbline 18
 001E                   .dbline 18
 001E                   .dbline 19
 001E           ;    if(Satus()!=START) 
 001E 81B1              in R24,0x1
 0020 887F              andi R24,248
 0022 8830              cpi R24,8
 0024 11F0              breq L6
 0026           X1:
 0026                   .dbline 20
 0026           ;    return FALSE;    
 0026 01E0              ldi R16,1
 0028 2BC0              xjmp L2
 002A           L6:
 002A                   .dbline 22
 002A           ;    
 002A           ;    Write8Bit(SlaveAddress); //写 从机地址和写方式
 002A                   .dbline 22
 002A E3B8              out 0x3,R14
 002C                   .dbline 22
 002C 84E8              ldi R24,132
 002E 86BF              out 0x36,R24
 0030                   .dbline 22
 0030                   .dbline 22
 0030                   .dbline 23
 0030           ;    Wait();
 0030           L8:
 0030                   .dbline 23
 0030           L9:
 0030                   .dbline 23
 0030 26B6              in R2,0x36
 0032 27FE              sbrs R2,7
 0034 FDCF              rjmp L8
 0036           X2:
 0036                   .dbline 23
 0036                   .dbline 23
 0036                   .dbline 24
 0036           ;    if(Satus()!=MT_SLA_ACK) 
 0036 81B1              in R24,0x1
 0038 887F              andi R24,248
 003A 8831              cpi R24,24
 003C 11F0              breq L11
 003E           X3:
 003E                   .dbline 25
 003E           ;    return FALSE;     
 003E 01E0              ldi R16,1
 0040 1FC0              xjmp L2
 0042           L11:
 0042                   .dbline 27
 0042           ;       
 0042           ;    Write8Bit(RegAddress);        //写 从机相应寄存器地址
 0042                   .dbline 27
 0042 C3B8              out 0x3,R12
 0044                   .dbline 27
 0044 84E8              ldi R24,132
 0046 86BF              out 0x36,R24
 0048                   .dbline 27
 0048                   .dbline 27
 0048                   .dbline 28
 0048           ;    Wait();
 0048           L13:
 0048                   .dbline 28
 0048           L14:
 0048                   .dbline 28
 0048 26B6              in R2,0x36
 004A 27FE              sbrs R2,7
 004C FDCF              rjmp L13
 004E           X4:
 004E                   .dbline 28
 004E                   .dbline 28
 004E                   .dbline 29
 004E           ;    if(Satus()!=MT_DATA_ACK) 
 004E 81B1              in R24,0x1
 0050 887F              andi R24,248
 0052 8832              cpi R24,40
 0054 11F0              breq L16
 0056           X5:
 0056                   .dbline 30
 0056           ;    return FALSE;        
 0056 01E0              ldi R16,1
 0058 13C0              xjmp L2
 005A           L16:
 005A                   .dbline 32
 005A           ;   
 005A           ;    Write8Bit(Wdata);             //写数据到 从机相应寄存器
 005A                   .dbline 32
 005A A3B8              out 0x3,R10
 005C                   .dbline 32
 005C 84E8              ldi R24,132
 005E 86BF              out 0x36,R24
 0060                   .dbline 32
 0060                   .dbline 32
 0060                   .dbline 33
 0060           ;    Wait();
 0060           L18:
 0060                   .dbline 33
 0060           L19:
 0060                   .dbline 33
 0060 26B6              in R2,0x36
 0062 27FE              sbrs R2,7
 0064 FDCF              rjmp L18
 0066           X6:
 0066                   .dbline 33
 0066                   .dbline 33
 0066                   .dbline 34
 0066           ;    if(Satus()!=MT_DATA_ACK) 
 0066 81B1              in R24,0x1
 0068 887F              andi R24,248
 006A 8832              cpi R24,40
 006C 11F0              breq L21
 006E           X7:
 006E                   .dbline 35
 006E           ;    return FALSE;         
 006E 01E0              ldi R16,1
 0070 07C0              xjmp L2
 0072           L21:
 0072                   .dbline 37
 0072           ;    
 0072           ;    Stop();                               //TWI停止
 0072 84E9              ldi R24,148
 0074 86BF              out 0x36,R24
 0076                   .dbline 38
 0076           ;    delay_nms(10);                        //延时
 0076 0AE0              ldi R16,10
 0078 10E0              ldi R17,0
 007A 0E940000          xcall _delay_nms
 007E                   .dbline 39
 007E           ;    return TRUE;
 007E 0027              clr R16
 0080                   .dbline -2
 0080           L2:
 0080                   .dbline 0 ; func end
 0080 0C940000          xjmp pop_xgset00FC
 0084                   .dbsym r RegAddress 12 c
 0084                   .dbsym r Wdata 10 c
 0084                   .dbsym r SlaveAddress 14 c
 0084                   .dbend
 0084                   .dbfunc e TWI_Read _TWI_Read fc
 0084           ;           temp -> R10
 0084           ;     RegAddress -> R10
 0084           ; SlaveAddress_R -> R18
 0084           ; SlaveAddress_W -> R16
                        .even
 0084           _TWI_Read::
 0084 AA92              st -y,R10
 0086 A980              ldd R10,y+1
 0088                   .dbline -1
 0088                   .dbline 44
 0088           ; }
 0088           ; 
 0088           ; 
 0088           ; uchar TWI_Read(uchar SlaveAddress_W,uchar SlaveAddress_R,uchar RegAddress)
 0088           ; {
 0088                   .dbline 46
 0088           ;    uchar temp;
 0088           ;    Start();                                      //TWI启动
 0088 84EA              ldi R24,164
 008A 86BF              out 0x36,R24
 008C                   .dbline 47
 008C           ;    Wait();
 008C           L24:
 008C                   .dbline 47
 008C           L25:
 008C                   .dbline 47
 008C 26B6              in R2,0x36
 008E 27FE              sbrs R2,7
 0090 FDCF              rjmp L24
 0092           X8:
 0092                   .dbline 47
 0092                   .dbline 47
 0092                   .dbline 51
 0092           ;    //if (Satus()!=START) 
 0092           ;    // return FALSE;        
 0092           ;     
 0092           ;    Write8Bit(SlaveAddress_W); //写 从机地址和写方式
 0092                   .dbline 51
 0092 03B9              out 0x3,R16
 0094                   .dbline 51
 0094 84E8              ldi R24,132
 0096 86BF              out 0x36,R24
 0098                   .dbline 51
 0098                   .dbline 51
 0098                   .dbline 52
 0098           ;    Wait(); 
 0098           L27:
 0098                   .dbline 52
 0098           L28:
 0098                   .dbline 52
 0098 26B6              in R2,0x36
 009A 27FE              sbrs R2,7
 009C FDCF              rjmp L27
 009E           X9:
 009E                   .dbline 52
 009E                   .dbline 52
 009E                   .dbline 53
 009E           ;    if (Satus()!=MT_SLA_ACK) 
 009E 81B1              in R24,0x1
 00A0 887F              andi R24,248
 00A2 8831              cpi R24,24
 00A4 11F0              breq L30
 00A6           X10:
 00A6                   .dbline 54
 00A6           ;     return FALSE;        
 00A6 01E0              ldi R16,1
 00A8 32C0              xjmp L23
 00AA           L30:
 00AA                   .dbline 56
 00AA           ;     
 00AA           ;    Write8Bit(RegAddress);      //写 从机相应寄存器地址
 00AA                   .dbline 56
 00AA A3B8              out 0x3,R10
 00AC                   .dbline 56
 00AC 84E8              ldi R24,132
 00AE 86BF              out 0x36,R24
 00B0                   .dbline 56
 00B0                   .dbline 56
 00B0                   .dbline 57
 00B0           ;    Wait();
 00B0           L32:
 00B0                   .dbline 57
 00B0           L33:
 00B0                   .dbline 57
 00B0 26B6              in R2,0x36
 00B2 27FE              sbrs R2,7
 00B4 FDCF              rjmp L32
 00B6           X11:
 00B6                   .dbline 57
 00B6                   .dbline 57
 00B6                   .dbline 58
 00B6           ;    if (Satus()!=MT_DATA_ACK) 
 00B6 81B1              in R24,0x1
 00B8 887F              andi R24,248
 00BA 8832              cpi R24,40
 00BC 11F0              breq L35
 00BE           X12:
 00BE                   .dbline 59
 00BE           ;     return FALSE;
 00BE 01E0              ldi R16,1
 00C0 26C0              xjmp L23
 00C2           L35:
 00C2                   .dbline 61
 00C2           ;     
 00C2           ;    Start();                          //TWI重新启动
 00C2 84EA              ldi R24,164
 00C4 86BF              out 0x36,R24
 00C6                   .dbline 62
 00C6           ;    Wait();
 00C6           L37:
 00C6                   .dbline 62
 00C6           L38:
 00C6                   .dbline 62
 00C6 26B6              in R2,0x36
 00C8 27FE              sbrs R2,7
 00CA FDCF              rjmp L37
 00CC           X13:
 00CC                   .dbline 62
 00CC                   .dbline 62
 00CC                   .dbline 63
 00CC           ;    if (Satus()!=RE_START)  
 00CC 81B1              in R24,0x1
 00CE 887F              andi R24,248
 00D0 8031              cpi R24,16
 00D2 11F0              breq L40
 00D4           X14:
 00D4                   .dbline 64
 00D4           ;     return FALSE;
 00D4 01E0              ldi R16,1
 00D6 1BC0              xjmp L23
 00D8           L40:
 00D8                   .dbline 66
 00D8           ;     
 00D8           ;    Write8Bit(SlaveAddress_R); //写 从机地址和读方式
 00D8                   .dbline 66
 00D8 23B9              out 0x3,R18
 00DA                   .dbline 66
 00DA 84E8              ldi R24,132
 00DC 86BF              out 0x36,R24
 00DE                   .dbline 66
 00DE                   .dbline 66
 00DE                   .dbline 67
 00DE           ;    Wait();
 00DE           L42:
 00DE                   .dbline 67
 00DE           L43:
 00DE                   .dbline 67
 00DE 26B6              in R2,0x36
 00E0 27FE              sbrs R2,7
 00E2 FDCF              rjmp L42
 00E4           X15:
 00E4                   .dbline 67
 00E4                   .dbline 67
 00E4                   .dbline 68
 00E4           ;    if(Satus()!=MR_SLA_ACK)  
 00E4 81B1              in R24,0x1
 00E6 887F              andi R24,248
 00E8 8034              cpi R24,64
 00EA 11F0              breq L45
 00EC           X16:
 00EC                   .dbline 69
 00EC           ;     return FALSE;      
 00EC 01E0              ldi R16,1
 00EE 0FC0              xjmp L23
 00F0           L45:
 00F0                   .dbline 71
 00F0           ;     
 00F0           ;    TWI_READ();                   //启动主TWI读方式
 00F0 84E8              ldi R24,132
 00F2 86BF              out 0x36,R24
 00F4                   .dbline 72
 00F4           ;    Wait();
 00F4           L47:
 00F4                   .dbline 72
 00F4           L48:
 00F4                   .dbline 72
 00F4 26B6              in R2,0x36
 00F6 27FE              sbrs R2,7
 00F8 FDCF              rjmp L47
 00FA           X17:
 00FA                   .dbline 72
 00FA                   .dbline 72
 00FA                   .dbline 73
 00FA           ;    if(Satus()!=MR_DATA_NOACK)//读完一个数停止接收数据 ，主机接收到不再接收应答信号 ，如果继续接收到应答信号
 00FA 81B1              in R24,0x1
 00FC 887F              andi R24,248
 00FE 8835              cpi R24,88
 0100 11F0              breq L50
 0102           X18:
 0102                   .dbline 75
 0102           ;                                                         //说明主机继续接收数据则为错误                                                                                                                                                                                                                                                                 
 0102           ;     return FALSE;     
 0102 01E0              ldi R16,1
 0104 04C0              xjmp L23
 0106           L50:
 0106                   .dbline 77
 0106           ;     
 0106           ;    temp=TWDR;                    //读取 TWI接收数据
 0106 A3B0              in R10,0x3
 0108                   .dbline 78
 0108           ;    Stop();                       //TWI停止
 0108 84E9              ldi R24,148
 010A 86BF              out 0x36,R24
 010C                   .dbline 79
 010C           ;    return temp;
 010C 0A2D              mov R16,R10
 010E                   .dbline -2
 010E           L23:
 010E                   .dbline 0 ; func end
 010E A990              ld R10,y+
 0110 0895              ret
 0112                   .dbsym r temp 10 c
 0112                   .dbsym r RegAddress 10 c
 0112                   .dbsym r SlaveAddress_R 18 c
 0112                   .dbsym r SlaveAddress_W 16 c
 0112                   .dbend
 0112                   .dbfunc e TWI_Read_1307 _TWI_Read_1307 fc
 0112           ;           data -> <dead>
 0112           ;     RegAddress -> R10
 0112           ; SlaveAddress_R -> R18
 0112           ; SlaveAddress_W -> R16
                        .even
 0112           _TWI_Read_1307::
 0112 AA92              st -y,R10
 0114 A980              ldd R10,y+1
 0116                   .dbline -1
 0116                   .dbline 83
 0116           ; } 
 0116           ; 
 0116           ; uchar TWI_Read_1307(uchar SlaveAddress_W,uchar SlaveAddress_R,uchar RegAddress,uchar *data)
 0116           ; {
 0116                   .dbline 84
 0116           ;    Start();                                      //TWI启动
 0116 84EA              ldi R24,164
 0118 86BF              out 0x36,R24
 011A                   .dbline 85
 011A           ;    Wait();
 011A           L53:
 011A                   .dbline 85
 011A           L54:
 011A                   .dbline 85
 011A 26B6              in R2,0x36
 011C 27FE              sbrs R2,7
 011E FDCF              rjmp L53
 0120           X19:
 0120                   .dbline 85
 0120                   .dbline 85
 0120                   .dbline 86
 0120           ;    if (Satus()!=START) 
 0120 81B1              in R24,0x1
 0122 887F              andi R24,248
 0124 8830              cpi R24,8
 0126 11F0              breq L56
 0128           X20:
 0128                   .dbline 87
 0128           ;     return FALSE;        
 0128 01E0              ldi R16,1
 012A 39C0              xjmp L52
 012C           L56:
 012C                   .dbline 89
 012C           ;     
 012C           ;    Write8Bit(SlaveAddress_W); //写 从机地址和写方式
 012C                   .dbline 89
 012C 03B9              out 0x3,R16
 012E                   .dbline 89
 012E 84E8              ldi R24,132
 0130 86BF              out 0x36,R24
 0132                   .dbline 89
 0132                   .dbline 89
 0132                   .dbline 90
 0132           ;    Wait(); 
 0132           L58:
 0132                   .dbline 90
 0132           L59:
 0132                   .dbline 90
 0132 26B6              in R2,0x36
 0134 27FE              sbrs R2,7
 0136 FDCF              rjmp L58
 0138           X21:
 0138                   .dbline 90
 0138                   .dbline 90
 0138                   .dbline 91
 0138           ;    if (Satus()!=MT_SLA_ACK) 
 0138 81B1              in R24,0x1
 013A 887F              andi R24,248
 013C 8831              cpi R24,24
 013E 11F0              breq L61
 0140           X22:
 0140                   .dbline 92
 0140           ;     return FALSE;        
 0140 01E0              ldi R16,1
 0142 2DC0              xjmp L52
 0144           L61:
 0144                   .dbline 94
 0144           ;     
 0144           ;    Write8Bit(RegAddress);      //写 从机相应寄存器地址
 0144                   .dbline 94
 0144 A3B8              out 0x3,R10
 0146                   .dbline 94
 0146 84E8              ldi R24,132
 0148 86BF              out 0x36,R24
 014A                   .dbline 94
 014A                   .dbline 94
 014A                   .dbline 95
 014A           ;    Wait();
 014A           L63:
 014A                   .dbline 95
 014A           L64:
 014A                   .dbline 95
 014A 26B6              in R2,0x36
 014C 27FE              sbrs R2,7
 014E FDCF              rjmp L63
 0150           X23:
 0150                   .dbline 95
 0150                   .dbline 95
 0150                   .dbline 96
 0150           ;    if (Satus()!=MT_DATA_ACK) 
 0150 81B1              in R24,0x1
 0152 887F              andi R24,248
 0154 8832              cpi R24,40
 0156 11F0              breq L66
 0158           X24:
 0158                   .dbline 97
 0158           ;     return FALSE;
 0158 01E0              ldi R16,1
 015A 21C0              xjmp L52
 015C           L66:
 015C                   .dbline 99
 015C           ;     
 015C           ;    Start();                          //TWI重新启动
 015C 84EA              ldi R24,164
 015E 86BF              out 0x36,R24
 0160                   .dbline 100
 0160           ;    Wait();
 0160           L68:
 0160                   .dbline 100
 0160           L69:
 0160                   .dbline 100
 0160 26B6              in R2,0x36
 0162 27FE              sbrs R2,7
 0164 FDCF              rjmp L68
 0166           X25:
 0166                   .dbline 100
 0166                   .dbline 100
 0166                   .dbline 101
 0166           ;    if (Satus()!=RE_START)  
 0166 81B1              in R24,0x1
 0168 887F              andi R24,248
 016A 8031              cpi R24,16
 016C 11F0              breq L71
 016E           X26:
 016E                   .dbline 102
 016E           ;     return FALSE;
 016E 01E0              ldi R16,1
 0170 16C0              xjmp L52
 0172           L71:
 0172                   .dbline 104
 0172           ;     
 0172           ;    Write8Bit(SlaveAddress_R); //写 从机地址和读方式
 0172                   .dbline 104
 0172 23B9              out 0x3,R18
 0174                   .dbline 104
 0174 84E8              ldi R24,132
 0176 86BF              out 0x36,R24
 0178                   .dbline 104
 0178                   .dbline 104
 0178                   .dbline 105
 0178           ;    Wait();
 0178           L73:
 0178                   .dbline 105
 0178           L74:
 0178                   .dbline 105
 0178 26B6              in R2,0x36
 017A 27FE              sbrs R2,7
 017C FDCF              rjmp L73
 017E           X27:
 017E                   .dbline 105
 017E                   .dbline 105
 017E                   .dbline 106
 017E           ;    if(Satus()!=MR_SLA_ACK)  
 017E 81B1              in R24,0x1
 0180 887F              andi R24,248
 0182 8034              cpi R24,64
 0184 11F0              breq L76
 0186           X28:
 0186                   .dbline 107
 0186           ;     return FALSE;      
 0186 01E0              ldi R16,1
 0188 0AC0              xjmp L52
 018A           L76:
 018A                   .dbline 109
 018A           ;     
 018A           ;    TWI_READ();                   //启动主TWI读方式
 018A 84E8              ldi R24,132
 018C 86BF              out 0x36,R24
 018E                   .dbline 110
 018E           ;    Wait();
 018E           L78:
 018E                   .dbline 110
 018E           L79:
 018E                   .dbline 110
 018E 26B6              in R2,0x36
 0190 27FE              sbrs R2,7
 0192 FDCF              rjmp L78
 0194           X29:
 0194                   .dbline 110
 0194                   .dbline 110
 0194                   .dbline 111
 0194           ;    if(Satus()!=MR_DATA_NOACK)//读完一个数停止接收数据 ，主机接收到不再接收应答信号 ，如果继续接收到应答信号                                             
 0194 81B1              in R24,0x1
 0196 887F              andi R24,248
 0198 8835              cpi R24,88
 019A 09F0              breq L81
 019C           X30:
 019C                   .dbline 113
 019C           ;                              //说明主机继续接收数据则为错误                                                                                                                                                                                                                                                            
 019C           ;     return FALSE;     
 019C 01E0              ldi R16,1
 019E           L81:
 019E                   .dbline -2
 019E           L52:
 019E                   .dbline 0 ; func end
 019E A990              ld R10,y+
 01A0 0895              ret
 01A2                   .dbsym l data 3 pc
 01A2                   .dbsym r RegAddress 10 c
 01A2                   .dbsym r SlaveAddress_R 18 c
 01A2                   .dbsym r SlaveAddress_W 16 c
 01A2                   .dbend
 01A2                   .dbfunc e Twi_write_data _Twi_write_data fV
 01A2           ;              i -> R20,R21
                        .even
 01A2           _Twi_write_data::
 01A2 4A93              st -y,R20
 01A4 5A93              st -y,R21
 01A6 2197              sbiw R28,1
 01A8                   .dbline -1
 01A8                   .dbline 122
 01A8           ;     
 01A8           ;    /*temp=TWDR;                          //读取 TWI接收数据
 01A8           ;    Stop();                       //TWI停止
 01A8           ;    return temp;*/
 01A8           ; } 
 01A8           ; 
 01A8           ; 
 01A8           ; void Twi_write_data(void)
 01A8           ; {
 01A8                   .dbline 124
 01A8           ;    uint i;
 01A8           ;    for(i=0;i<4;i++)
 01A8 4427              clr R20
 01AA 5527              clr R21
 01AC 08C0              xjmp L87
 01AE           L84:
 01AE                   .dbline 125
 01AE           ;    {
 01AE                   .dbline 126
 01AE           ;       TWI_Write(WD_AT2402C_ADDR,'0'+i,i);     //写入0-3
 01AE 4883              std y+0,R20
 01B0 9A01              movw R18,R20
 01B2 205D              subi R18,208  ; offset = 48
 01B4 3F4F              sbci R19,255
 01B6 00EA              ldi R16,160
 01B8 28DF              xcall _TWI_Write
 01BA                   .dbline 127
 01BA           ;    }
 01BA           L85:
 01BA                   .dbline 124
 01BA 4F5F              subi R20,255  ; offset = 1
 01BC 5F4F              sbci R21,255
 01BE           L87:
 01BE                   .dbline 124
 01BE 4430              cpi R20,4
 01C0 E0E0              ldi R30,0
 01C2 5E07              cpc R21,R30
 01C4 A0F3              brlo L84
 01C6           X31:
 01C6                   .dbline 129
 01C6           ;    
 01C6           ;    for(i=0;i<26;i++)
 01C6 4427              clr R20
 01C8 5527              clr R21
 01CA 0AC0              xjmp L91
 01CC           L88:
 01CC                   .dbline 130
 01CC           ;    {
 01CC                   .dbline 131
 01CC           ;       TWI_Write(WD_AT2402C_ADDR,'A'+i,(4+i)); //写入大写字母表
 01CC CA01              movw R24,R20
 01CE 0496              adiw R24,4
 01D0 8883              std y+0,R24
 01D2 9A01              movw R18,R20
 01D4 2F5B              subi R18,191  ; offset = 65
 01D6 3F4F              sbci R19,255
 01D8 00EA              ldi R16,160
 01DA 17DF              xcall _TWI_Write
 01DC                   .dbline 132
 01DC           ;    }
 01DC           L89:
 01DC                   .dbline 129
 01DC 4F5F              subi R20,255  ; offset = 1
 01DE 5F4F              sbci R21,255
 01E0           L91:
 01E0                   .dbline 129
 01E0 4A31              cpi R20,26
 01E2 E0E0              ldi R30,0
 01E4 5E07              cpc R21,R30
 01E6 90F3              brlo L88
 01E8           X32:
 01E8                   .dbline 134
 01E8           ;    
 01E8           ;    for(i=0;i<26;i++)
 01E8 4427              clr R20
 01EA 5527              clr R21
 01EC 0AC0              xjmp L95
 01EE           L92:
 01EE                   .dbline 135
 01EE           ;    {
 01EE                   .dbline 136
 01EE           ;       TWI_Write(WD_AT2402C_ADDR,'a'+i,(30+i));//写入小写字母表
 01EE CA01              movw R24,R20
 01F0 4E96              adiw R24,30
 01F2 8883              std y+0,R24
 01F4 9A01              movw R18,R20
 01F6 2F59              subi R18,159  ; offset = 97
 01F8 3F4F              sbci R19,255
 01FA 00EA              ldi R16,160
 01FC 06DF              xcall _TWI_Write
 01FE                   .dbline 137
 01FE           ;    }
 01FE           L93:
 01FE                   .dbline 134
 01FE 4F5F              subi R20,255  ; offset = 1
 0200 5F4F              sbci R21,255
 0202           L95:
 0202                   .dbline 134
 0202 4A31              cpi R20,26
 0204 E0E0              ldi R30,0
 0206 5E07              cpc R21,R30
 0208 90F3              brlo L92
 020A           X33:
 020A                   .dbline 139
 020A           ;    
 020A           ;    for(i=56;i<=255;i++)
 020A 48E3              ldi R20,56
 020C 50E0              ldi R21,0
 020E 06C0              xjmp L99
 0210           L96:
 0210                   .dbline 140
 0210           ;    {
 0210                   .dbline 141
 0210           ;       TWI_Write(WD_AT2402C_ADDR,'0',i);       //其他写入0
 0210 4883              std y+0,R20
 0212 20E3              ldi R18,48
 0214 00EA              ldi R16,160
 0216 F9DE              xcall _TWI_Write
 0218                   .dbline 142
 0218           ;    }
 0218           L97:
 0218                   .dbline 139
 0218 4F5F              subi R20,255  ; offset = 1
 021A 5F4F              sbci R21,255
 021C           L99:
 021C                   .dbline 139
 021C 8FEF              ldi R24,255
 021E 90E0              ldi R25,0
 0220 8417              cp R24,R20
 0222 9507              cpc R25,R21
 0224 A8F7              brsh L96
 0226           X34:
 0226                   .dbline -2
 0226           L83:
 0226                   .dbline 0 ; func end
 0226 2196              adiw R28,1
 0228 5991              ld R21,y+
 022A 4991              ld R20,y+
 022C 0895              ret
 022E                   .dbsym r i 20 i
 022E                   .dbend
 022E           ; }
